layout (input_attachment_index = 0, set = 0, binding = 0) uniform subpassInput AlbedoSampler;
layout (input_attachment_index = 1, set = 0, binding = 1) uniform subpassInput PositionSampler;
layout (input_attachment_index = 2, set = 0, binding = 2) uniform subpassInput NormalSampler;

layout(location = 0) out vec4 FragColor;

layout(set = 1, binding = 0) uniform PerFrame
{
	vec3 CamPos;
};

void main()
{
	FragColor = vec4(0,0,0,0);
	float Gamma = 2.2;

	vec4 pos = subpassLoad(PositionSampler);
	vec4 normal = subpassLoad(NormalSampler);
	vec4 albedo = subpassLoad(AlbedoSampler);

	float metallic = clamp(pos.a, 0.0, 1.0);
	float roughness = clamp(normal.a, 0.05, 1.0);

	FragColor = CalcDeferredPass(pos.xyz, CamPos, normalize(normal.xyz), albedo.rgb, metallic, roughness);
	//FragColor.rgb = FragColor.rgb / (FragColor.rgb + vec3(1.0, 1.0, 1.0));
	//FragColor.rgb = pow(FragColor.rgb, vec3(1.0 / Gamma, 1.0 / Gamma, 1.0 / Gamma));
}
